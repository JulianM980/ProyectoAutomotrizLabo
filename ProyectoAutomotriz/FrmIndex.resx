<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>